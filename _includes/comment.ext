{% if page.repo %}
<div id="issues"></div>
<div id="comment-box" class="text-center">
  <p>对此文章有疑问？你可以点击<a href="https://github.com/{{ page.repo }}/issues/new" target="_blank">此链接</a>反馈你的问题</p>
</div>

<script src="/static/js/jquery.timeago.js"></script>
<script id="issue-template" type="text/plain">
<div class="issue media">
  <div class="media-left">
    <a href="[[user.html_url]]" target="_blank" class="link-gray-dark avatar-link">
      <img src="[[user.avatar_url]]" alt="[[user.login]]" width="48" height="48" class="avatar">
      <i class="state-icon fa fa-check-circle"></i>
    </a>
  </div>
  <div class="media-body">
    <h4 class="media-heading">
      <a href="[[html_url]]" target="_blank" title="[[title]]" class="link-gray-dark">[[title]]</a>
    </h4>
    <div class="text-small text-muted">
      #[[number]] 由
      <strong><a href="[[user.html_url]]" target="_blank" class="link-gray-dark">[[user.login]]</a></strong>
      在<span class="timeago" title="[[created_at]]"></span>打开
    </div>
  </div>
  <div class="media-right comments">
    <i class="fa fa-comment-o"></i> [[comments]]
  </div>
</div>
</script>
<script>
function initTimeago() {
  jQuery.timeago.settings.strings = {
    prefixAgo: null,
    prefixFromNow: "从现在开始",
    suffixAgo: "之前",
    suffixFromNow: null,
    seconds: "不到1分钟",
    minute: "大约1分钟",
    minutes: "%d分钟",
    hour: "大约1小时",
    hours: "大约%d小时",
    day: "1天",
    days: "%d天",
    month: "大约1个月",
    months: "%d月",
    year: "大约1年",
    years: "%d年",
    numbers: [],
    wordSeparator: ""
  };
  $('.timeago').timeago();
}

function renderIssue(template, issue) {
  var html = template;
  with (issue) {
    html = html.replace(/\[\[title\]\]/g, title);
    html = html.replace(/\[\[number\]\]/g, number);
    html = html.replace(/\[\[comments\]\]/g, comments);
    html = html.replace(/\[\[html_url\]\]/g, html_url);
    html = html.replace(/\[\[created_at\]\]/g, created_at);
    html = html.replace(/\[\[user.login\]\]/g, user.login);
    html = html.replace(/\[\[user.html_url\]\]/g, user.html_url);
    html = html.replace(/\[\[user.avatar_url\]\]/g, user.avatar_url);
  }
  var $issue = $(html);
  if (issue.comments === 0) {
    $issue.find('.comments').empty();
  }
  if (issue.state === 'open') {
    $issue.find('.state-icon').remove();
  }
  return $issue;
}

function renderIssues(issues) {
  var $issues = $('#issues');
  var template = $('#issue-template').html();
  for (var i = 0; i < issues.length; ++i) {
    $issues.append(renderIssue(template, issues[i]));
  }
  initTimeago();
}

var milestone = '{{ page.milestone }}';
var url = 'https://api.github.com/repos/{{ page.repo }}/issues?state=all';
if (milestone) {
  url += '&milestone=' + milestone;
}
$.get(url, renderIssues);
</script>
{% endif %}
